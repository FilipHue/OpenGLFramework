.TH "Shader" 3 "Sun Apr 9 2023" "OpenGL Framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Shader
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <shader\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBShader\fP (const char *vertex_shader_path, const char *fragment_shader_path)"
.br
.RI "Class constructor\&. "
.ti -1c
.RI "void \fBUse\fP ()"
.br
.ti -1c
.RI "void \fBSetBool\fP (const std::string &name, bool value) const"
.br
.ti -1c
.RI "void \fBSetInt\fP (const std::string &name, int value) const"
.br
.ti -1c
.RI "void \fBSetFloat\fP (const std::string &name, float value) const"
.br
.ti -1c
.RI "void \fBSetVec2\fP (const std::string &name, glm::vec2 &value) const"
.br
.ti -1c
.RI "void \fBSetVec3\fP (const std::string &name, glm::vec3 &value) const"
.br
.ti -1c
.RI "void \fBSetVec4\fP (const std::string &name, glm::vec4 &value) const"
.br
.ti -1c
.RI "void \fBSetMat2\fP (const std::string &name, glm::mat2 &value) const"
.br
.ti -1c
.RI "void \fBSetMat3\fP (const std::string &name, glm::mat3 &value) const"
.br
.ti -1c
.RI "void \fBSetMat4\fP (const std::string &name, glm::mat4 &value) const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBshaderID\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB18\fP of file \fBshader\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Shader::Shader (const char * vertex_shader_path, const char * fragment_shader_path)"

.PP
Class constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIvertext_shader_path\fP The vertex shader file path 
.br
\fIfragment_shader_path\fP The fragment shader file path 
.RE
.PP

.PP
Definition at line \fB3\fP of file \fBshader\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Shader::SetBool (const std::string & name, bool value) const"

.PP
Definition at line \fB80\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetFloat (const std::string & name, float value) const"

.PP
Definition at line \fB90\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetInt (const std::string & name, int value) const"

.PP
Definition at line \fB85\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetMat2 (const std::string & name, glm::mat2 & value) const"

.PP
Definition at line \fB110\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetMat3 (const std::string & name, glm::mat3 & value) const"

.PP
Definition at line \fB115\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetMat4 (const std::string & name, glm::mat4 & value) const"

.PP
Definition at line \fB120\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetVec2 (const std::string & name, glm::vec2 & value) const"

.PP
Definition at line \fB95\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetVec3 (const std::string & name, glm::vec3 & value) const"

.PP
Definition at line \fB100\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::SetVec4 (const std::string & name, glm::vec4 & value) const"

.PP
Definition at line \fB105\fP of file \fBshader\&.cpp\fP\&.
.SS "void Shader::Use ()"
It enables openGL to use this shader program 
.PP
Definition at line \fB75\fP of file \fBshader\&.cpp\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "unsigned int Shader::shaderID"

.PP
Definition at line \fB46\fP of file \fBshader\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OpenGL Framework from the source code\&.
