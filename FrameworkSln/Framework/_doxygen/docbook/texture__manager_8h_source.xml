<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_texture__manager_8h_source" xml:lang="en-US">
<title>texture_manager.h</title>
<indexterm><primary>src/managers/texture/texture_manager.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_texture__manager_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_texture__manager_8h_source_1l00002"/>00002 
<anchor xml:id="_texture__manager_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;unordered_map&gt;</emphasis>
<anchor xml:id="_texture__manager_8h_source_1l00004"/>00004 
<anchor xml:id="_texture__manager_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;core.h&gt;</emphasis>
<anchor xml:id="_texture__manager_8h_source_1l00006"/>00006 
<anchor xml:id="_texture__manager_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;glad/glad.h&gt;</emphasis>
<anchor xml:id="_texture__manager_8h_source_1l00008"/>00008 
<anchor xml:id="_texture__manager_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_texture__2_d_8h">texture_2D.h</link>&quot;</emphasis>
<anchor xml:id="_texture__manager_8h_source_1l00010"/>00010 
<anchor xml:id="_texture__manager_8h_source_1l00011"/><link linkend="_class_texture_manger">00011</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_texture_manger">TextureManger</link>
<anchor xml:id="_texture__manager_8h_source_1l00012"/>00012 {
<anchor xml:id="_texture__manager_8h_source_1l00013"/><link linkend="_class_texture_manger_1aa70951a0328ba29f64176f16b3ea47d8">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_texture2_d">Texture2D</link>;
<anchor xml:id="_texture__manager_8h_source_1l00014"/>00014 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_texture__manager_8h_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_texture_manger_1ac3e06553f16a5a714bd5a87065f92019">LoadTexture2D</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;file_path,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;name);
<anchor xml:id="_texture__manager_8h_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<link linkend="_class_texture2_d">Texture2D</link>*&#32;<link linkend="_class_texture_manger_1a4e88fc790721433c962598f141096f89">GetTexture2D</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;name);
<anchor xml:id="_texture__manager_8h_source_1l00022"/>00022 
<anchor xml:id="_texture__manager_8h_source_1l00023"/>00023 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_texture__manager_8h_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GLuint&#32;GetPixelFormat(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels);
<anchor xml:id="_texture__manager_8h_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GLuint&#32;GetInternalFormat(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;channels);
<anchor xml:id="_texture__manager_8h_source_1l00038"/>00038 
<anchor xml:id="_texture__manager_8h_source_1l00039"/>00039 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_texture__manager_8h_source_1l00040"/>00040 &#32;&#32;&#32;&#32;std::unordered_map&lt;const&#32;char*,&#32;Texture2D*&gt;&#32;textures_2D;
<anchor xml:id="_texture__manager_8h_source_1l00041"/>00041 
<anchor xml:id="_texture__manager_8h_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;GLuint&#32;pixel_format[5]&#32;=&#32;{&#32;0,&#32;GL_RED,&#32;GL_RG,&#32;GL_RGB,&#32;GL_RGBA&#32;};
<anchor xml:id="_texture__manager_8h_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;GLuint&#32;internal_format[4][5]&#32;=&#32;{
<anchor xml:id="_texture__manager_8h_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;0,&#32;GL_R8,&#32;GL_RG8,&#32;GL_RGB8,&#32;GL_RGBA8&#32;},
<anchor xml:id="_texture__manager_8h_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;0,&#32;GL_R16,&#32;GL_RG16,&#32;GL_RGB16,&#32;GL_RGBA16&#32;},
<anchor xml:id="_texture__manager_8h_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;0,&#32;GL_R16F,&#32;GL_RG16F,&#32;GL_RGB16F,&#32;GL_RGBA16F&#32;},
<anchor xml:id="_texture__manager_8h_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;0,&#32;GL_R32F,&#32;GL_RG32F,&#32;GL_RGB32F,&#32;GL_RGBA32F&#32;}
<anchor xml:id="_texture__manager_8h_source_1l00048"/>00048 &#32;&#32;&#32;&#32;};
<anchor xml:id="_texture__manager_8h_source_1l00049"/>00049 };
<anchor xml:id="_texture__manager_8h_source_1l00050"/>00050 
</programlisting></section>
