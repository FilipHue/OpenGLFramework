<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_camera__input_8cpp_source" xml:lang="en-US">
<title>camera_input.cpp</title>
<indexterm><primary>src/components/camera/camera_input.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_camera__input_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_camera__input_8h">camera_input.h</link>&quot;</emphasis>
<anchor xml:id="_camera__input_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;../../engine/engine.h&quot;</emphasis>
<anchor xml:id="_camera__input_8cpp_source_1l00003"/>00003 
<anchor xml:id="_camera__input_8cpp_source_1l00004"/><link linkend="_class_camera_input_1a138aeb0e4b14ba5fee1e081213102fbb">00004</link> <link linkend="_class_camera_input_1a138aeb0e4b14ba5fee1e081213102fbb">CameraInput::CameraInput</link>(<link linkend="_class_camera">Camera</link>*&#32;camera)
<anchor xml:id="_camera__input_8cpp_source_1l00005"/>00005 {
<anchor xml:id="_camera__input_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;this-&gt;camera&#32;=&#32;camera;
<anchor xml:id="_camera__input_8cpp_source_1l00007"/>00007 }
<anchor xml:id="_camera__input_8cpp_source_1l00008"/>00008 
<anchor xml:id="_camera__input_8cpp_source_1l00009"/>00009 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnInputUpdate(<emphasis role="keywordtype">double</emphasis>&#32;deltaTime,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mods)
<anchor xml:id="_camera__input_8cpp_source_1l00010"/>00010 {
<anchor xml:id="_camera__input_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">Engine::GetWindow</link>()-&gt;GetContinousPress(GLFW_KEY_W))&#32;{
<anchor xml:id="_camera__input_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1a59031bd85295e5c2ee27535925a48d47">MoveForward</link>(deltaTime);
<anchor xml:id="_camera__input_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;}
<anchor xml:id="_camera__input_8cpp_source_1l00014"/>00014 
<anchor xml:id="_camera__input_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">Engine::GetWindow</link>()-&gt;GetContinousPress(GLFW_KEY_S))&#32;{
<anchor xml:id="_camera__input_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1ac7ebe0bafd14a15a7ee0d7cd27d66eb0">MoveBackwards</link>(deltaTime);
<anchor xml:id="_camera__input_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="_camera__input_8cpp_source_1l00018"/>00018 
<anchor xml:id="_camera__input_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">Engine::GetWindow</link>()-&gt;GetContinousPress(GLFW_KEY_A))&#32;{
<anchor xml:id="_camera__input_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1a8860ae39635dc5b4f7e8dc9c0113cf6f">MoveLeft</link>(deltaTime);
<anchor xml:id="_camera__input_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="_camera__input_8cpp_source_1l00022"/>00022 
<anchor xml:id="_camera__input_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">Engine::GetWindow</link>()-&gt;GetContinousPress(GLFW_KEY_D))&#32;{
<anchor xml:id="_camera__input_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1a532c2904b5fcab9e1d4c37bf3a86a9f2">MoveRight</link>(deltaTime);
<anchor xml:id="_camera__input_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="_camera__input_8cpp_source_1l00026"/>00026 
<anchor xml:id="_camera__input_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">Engine::GetWindow</link>()-&gt;GetContinousPress(GLFW_KEY_Q))&#32;{
<anchor xml:id="_camera__input_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1ae4b636c39d52b712fc7cd7fc526ae602">MoveUp</link>(deltaTime);
<anchor xml:id="_camera__input_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="_camera__input_8cpp_source_1l00030"/>00030 
<anchor xml:id="_camera__input_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">Engine::GetWindow</link>()-&gt;GetContinousPress(GLFW_KEY_E))&#32;{
<anchor xml:id="_camera__input_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1a5adbb4b3c6ceac32dbf21a413604db67">MoveDown</link>(deltaTime);
<anchor xml:id="_camera__input_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;}
<anchor xml:id="_camera__input_8cpp_source_1l00034"/>00034 }
<anchor xml:id="_camera__input_8cpp_source_1l00035"/>00035 
<anchor xml:id="_camera__input_8cpp_source_1l00036"/>00036 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnKeyPress(<emphasis role="keywordtype">int</emphasis>&#32;key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mods)
<anchor xml:id="_camera__input_8cpp_source_1l00037"/>00037 {
<anchor xml:id="_camera__input_8cpp_source_1l00038"/>00038 }
<anchor xml:id="_camera__input_8cpp_source_1l00039"/>00039 
<anchor xml:id="_camera__input_8cpp_source_1l00040"/>00040 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnKeyRelease(<emphasis role="keywordtype">int</emphasis>&#32;key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mods)
<anchor xml:id="_camera__input_8cpp_source_1l00041"/>00041 {
<anchor xml:id="_camera__input_8cpp_source_1l00042"/>00042 }
<anchor xml:id="_camera__input_8cpp_source_1l00043"/>00043 
<anchor xml:id="_camera__input_8cpp_source_1l00044"/>00044 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnMouseMove(<emphasis role="keywordtype">double</emphasis>&#32;x_pos,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y_pos,&#32;<emphasis role="keywordtype">double</emphasis>&#32;delta_x,&#32;<emphasis role="keywordtype">double</emphasis>&#32;delta_y)
<anchor xml:id="_camera__input_8cpp_source_1l00045"/>00045 {
<anchor xml:id="_camera__input_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1a83430aef96c210cb1d901f62f0915bf0">RotateOX</link>(-delta_y&#32;*&#32;camera-&gt;<link linkend="_class_camera_1afa991f3e2f164beaba1df5fbf7162eb0">GetCameraSensitivity</link>());
<anchor xml:id="_camera__input_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;camera-&gt;<link linkend="_class_camera_1a2e12b851bfa0b3e2ebd7f1168ea1f9b6">RotateOY</link>(-delta_x&#32;*&#32;camera-&gt;<link linkend="_class_camera_1afa991f3e2f164beaba1df5fbf7162eb0">GetCameraSensitivity</link>());
<anchor xml:id="_camera__input_8cpp_source_1l00048"/>00048 }
<anchor xml:id="_camera__input_8cpp_source_1l00049"/>00049 
<anchor xml:id="_camera__input_8cpp_source_1l00050"/>00050 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnMouseButtonPress(<emphasis role="keywordtype">double</emphasis>&#32;mouseX,&#32;<emphasis role="keywordtype">double</emphasis>&#32;mouseY,&#32;<emphasis role="keywordtype">int</emphasis>&#32;button,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mods)
<anchor xml:id="_camera__input_8cpp_source_1l00051"/>00051 {
<anchor xml:id="_camera__input_8cpp_source_1l00052"/>00052 }
<anchor xml:id="_camera__input_8cpp_source_1l00053"/>00053 
<anchor xml:id="_camera__input_8cpp_source_1l00054"/>00054 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnMouseButttonRelease(<emphasis role="keywordtype">double</emphasis>&#32;mouseX,&#32;<emphasis role="keywordtype">double</emphasis>&#32;mouseY,&#32;<emphasis role="keywordtype">int</emphasis>&#32;button,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mods)
<anchor xml:id="_camera__input_8cpp_source_1l00055"/>00055 {
<anchor xml:id="_camera__input_8cpp_source_1l00056"/>00056 }
<anchor xml:id="_camera__input_8cpp_source_1l00057"/>00057 
<anchor xml:id="_camera__input_8cpp_source_1l00058"/>00058 <emphasis role="keywordtype">void</emphasis>&#32;CameraInput::OnMouseScroll(<emphasis role="keywordtype">double</emphasis>&#32;x_offset,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y_offset)
<anchor xml:id="_camera__input_8cpp_source_1l00059"/>00059 {
<anchor xml:id="_camera__input_8cpp_source_1l00060"/>00060 }
</programlisting></section>
