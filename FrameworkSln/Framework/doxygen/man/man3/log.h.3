.TH "src/managers/logger/log.h" 3 "Sun Apr 9 2023" "OpenGL Framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/managers/logger/log.h
.SH SYNOPSIS
.br
.PP
\fC#include 'spdlog/spdlog\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFRAMEWORK_CORE_LOGGER_NAME\fP   'CORE'"
.br
.ti -1c
.RI "#define \fBFRAMEWORK_ENGINE_LOGGER_NAME\fP   'ENGINE'"
.br
.ti -1c
.RI "#define \fBFRAMEWORK_SHADER_LOGGER_NAME\fP   'SHADER'"
.br
.ti -1c
.RI "#define \fBFRAMEWORK_RENDER_LOGGER_NAME\fP   'RENDER'"
.br
.ti -1c
.RI "#define \fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP   'TEXTURE'"
.br
.ti -1c
.RI "#define \fBCORE_TRACE\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBCORE_DEBUG\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBCORE_INFO\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBCORE_WARN\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBCORE_ERROR\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBCORE_CRITICAL\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBENGINE_TRACE\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBENGINE_DEBUG\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBENGINE_INFO\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBENGINE_WARN\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBENGINE_ERROR\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBENGINE_CRITICAL\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBSHADER_TRACE\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBSHADER_DEBUG\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBSHADER_INFO\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBSHADER_WARN\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBSHADER_ERROR\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBSHADER_CRITICAL\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBRENDER_TRACE\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBRENDER_DEBUG\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBRENDER_INFO\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBRENDER_WARN\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBRENDER_ERROR\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBRENDER_CRITICAL\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBTEXTURE_TRACE\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBTEXTURE_DEBUG\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBTEXTURE_INFO\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBTEXTURE_WARN\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBTEXTURE_ERROR\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"
.br
.ti -1c
.RI "#define \fBTEXTURE_CRITICAL\fP(\&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CORE_CRITICAL( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"

.PP
Definition at line \fB16\fP of file \fBlog\&.h\fP\&.
.SS "#define CORE_DEBUG( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"

.PP
Definition at line \fB12\fP of file \fBlog\&.h\fP\&.
.SS "#define CORE_ERROR( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"

.PP
Definition at line \fB15\fP of file \fBlog\&.h\fP\&.
.SS "#define CORE_INFO( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"

.PP
Definition at line \fB13\fP of file \fBlog\&.h\fP\&.
.SS "#define CORE_TRACE( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"

.PP
Definition at line \fB11\fP of file \fBlog\&.h\fP\&.
.SS "#define CORE_WARN( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_CORE_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"

.PP
Definition at line \fB14\fP of file \fBlog\&.h\fP\&.
.SS "#define ENGINE_CRITICAL( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"

.PP
Definition at line \fB23\fP of file \fBlog\&.h\fP\&.
.SS "#define ENGINE_DEBUG( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"

.PP
Definition at line \fB19\fP of file \fBlog\&.h\fP\&.
.SS "#define ENGINE_ERROR( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"

.PP
Definition at line \fB22\fP of file \fBlog\&.h\fP\&.
.SS "#define ENGINE_INFO( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"

.PP
Definition at line \fB20\fP of file \fBlog\&.h\fP\&.
.SS "#define ENGINE_TRACE( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"

.PP
Definition at line \fB18\fP of file \fBlog\&.h\fP\&.
.SS "#define ENGINE_WARN( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_ENGINE_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"

.PP
Definition at line \fB21\fP of file \fBlog\&.h\fP\&.
.SS "#define FRAMEWORK_CORE_LOGGER_NAME   'CORE'"

.PP
Definition at line \fB5\fP of file \fBlog\&.h\fP\&.
.SS "#define FRAMEWORK_ENGINE_LOGGER_NAME   'ENGINE'"

.PP
Definition at line \fB6\fP of file \fBlog\&.h\fP\&.
.SS "#define FRAMEWORK_RENDER_LOGGER_NAME   'RENDER'"

.PP
Definition at line \fB8\fP of file \fBlog\&.h\fP\&.
.SS "#define FRAMEWORK_SHADER_LOGGER_NAME   'SHADER'"

.PP
Definition at line \fB7\fP of file \fBlog\&.h\fP\&.
.SS "#define FRAMEWORK_TEXTURE_LOGGER_NAME   'TEXTURE'"

.PP
Definition at line \fB9\fP of file \fBlog\&.h\fP\&.
.SS "#define RENDER_CRITICAL( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"

.PP
Definition at line \fB37\fP of file \fBlog\&.h\fP\&.
.SS "#define RENDER_DEBUG( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"

.PP
Definition at line \fB33\fP of file \fBlog\&.h\fP\&.
.SS "#define RENDER_ERROR( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"

.PP
Definition at line \fB36\fP of file \fBlog\&.h\fP\&.
.SS "#define RENDER_INFO( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"

.PP
Definition at line \fB34\fP of file \fBlog\&.h\fP\&.
.SS "#define RENDER_TRACE( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"

.PP
Definition at line \fB32\fP of file \fBlog\&.h\fP\&.
.SS "#define RENDER_WARN( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_RENDER_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"

.PP
Definition at line \fB35\fP of file \fBlog\&.h\fP\&.
.SS "#define SHADER_CRITICAL( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"

.PP
Definition at line \fB30\fP of file \fBlog\&.h\fP\&.
.SS "#define SHADER_DEBUG( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"

.PP
Definition at line \fB26\fP of file \fBlog\&.h\fP\&.
.SS "#define SHADER_ERROR( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"

.PP
Definition at line \fB29\fP of file \fBlog\&.h\fP\&.
.SS "#define SHADER_INFO( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"

.PP
Definition at line \fB27\fP of file \fBlog\&.h\fP\&.
.SS "#define SHADER_TRACE( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"

.PP
Definition at line \fB25\fP of file \fBlog\&.h\fP\&.
.SS "#define SHADER_WARN( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_SHADER_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"

.PP
Definition at line \fB28\fP of file \fBlog\&.h\fP\&.
.SS "#define TEXTURE_CRITICAL( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->critical(__VA_ARGS__);}"

.PP
Definition at line \fB44\fP of file \fBlog\&.h\fP\&.
.SS "#define TEXTURE_DEBUG( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->debug(__VA_ARGS__);}"

.PP
Definition at line \fB40\fP of file \fBlog\&.h\fP\&.
.SS "#define TEXTURE_ERROR( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->error(__VA_ARGS__);}"

.PP
Definition at line \fB43\fP of file \fBlog\&.h\fP\&.
.SS "#define TEXTURE_INFO( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->info(__VA_ARGS__);}"

.PP
Definition at line \fB41\fP of file \fBlog\&.h\fP\&.
.SS "#define TEXTURE_TRACE( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->trace(__VA_ARGS__);}"

.PP
Definition at line \fB39\fP of file \fBlog\&.h\fP\&.
.SS "#define TEXTURE_WARN( \&.\&.\&.)   if (spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP) != nullptr) {spdlog::get(\fBFRAMEWORK_TEXTURE_LOGGER_NAME\fP)\->warn(__VA_ARGS__);}"

.PP
Definition at line \fB42\fP of file \fBlog\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OpenGL Framework from the source code\&.
