<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_engine" xml:lang="en-US">
<title>Engine Class Reference</title>
<indexterm><primary>Engine</primary></indexterm>
<para>
<computeroutput>#include &lt;engine.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_engine_1a395090c0dca19ebe501d416edd7cad1f">Engine</link> ()=delete</para>

<para>Safety measure in case we accidentaly create an <link linkend="_class_engine">Engine</link> object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_engine_1a7a4cee29e4ab5e7634475906b6d61281">Init</link> (<link linkend="_structwindow__properties">window_properties</link> *wp)</para>

<para>Method for initializing the glfw library, window and logger. </para>
</listitem>
            <listitem><para>static void <link linkend="_class_engine_1a5a84db2911ba0cb28d1765c68d8eee8f">Exit</link> ()</para>

<para>Method for terminating the glfw library. </para>
</listitem>
            <listitem><para>static <link linkend="_class_window">Window</link> * <link linkend="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e">GetWindow</link> ()</para>
</listitem>
            <listitem><para>static double <link linkend="_class_engine_1abcd8b03e49c314ad6eb387dee28d54e7">GetElapsedTime</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_engine_8h_source_1l00007">7</link> of file <link linkend="_engine_8h_source">engine.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_engine_1a395090c0dca19ebe501d416edd7cad1f"/><section>
    <title>Engine()</title>
<indexterm><primary>Engine</primary><secondary>Engine</secondary></indexterm>
<indexterm><primary>Engine</primary><secondary>Engine</secondary></indexterm>
<para><computeroutput>Engine::Engine ( )<computeroutput>[delete]</computeroutput></computeroutput></para><para>

<para>Safety measure in case we accidentaly create an <link linkend="_class_engine">Engine</link> object. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_engine_1a5a84db2911ba0cb28d1765c68d8eee8f"/><section>
    <title>Exit()</title>
<indexterm><primary>Exit</primary><secondary>Engine</secondary></indexterm>
<indexterm><primary>Engine</primary><secondary>Exit</secondary></indexterm>
<para><computeroutput>void Engine::Exit ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Method for terminating the glfw library. </para>
</para>
<para>
Definition at line <link linkend="_engine_8cpp_source_1l00022">22</link> of file <link linkend="_engine_8cpp_source">engine.cpp</link>.</para>
</section>
<anchor xml:id="_class_engine_1abcd8b03e49c314ad6eb387dee28d54e7"/><section>
    <title>GetElapsedTime()</title>
<indexterm><primary>GetElapsedTime</primary><secondary>Engine</secondary></indexterm>
<indexterm><primary>Engine</primary><secondary>GetElapsedTime</secondary></indexterm>
<para><computeroutput>double Engine::GetElapsedTime ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_engine_8cpp_source_1l00033">33</link> of file <link linkend="_engine_8cpp_source">engine.cpp</link>.</para>
</section>
<anchor xml:id="_class_engine_1a77697a5d3d4fb8b8ef84b07d71567b0e"/><section>
    <title>GetWindow()</title>
<indexterm><primary>GetWindow</primary><secondary>Engine</secondary></indexterm>
<indexterm><primary>Engine</primary><secondary>GetWindow</secondary></indexterm>
<para><computeroutput><link linkend="_class_window">Window</link> * Engine::GetWindow ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_engine_8cpp_source_1l00028">28</link> of file <link linkend="_engine_8cpp_source">engine.cpp</link>.</para>
</section>
<anchor xml:id="_class_engine_1a7a4cee29e4ab5e7634475906b6d61281"/><section>
    <title>Init()</title>
<indexterm><primary>Init</primary><secondary>Engine</secondary></indexterm>
<indexterm><primary>Engine</primary><secondary>Init</secondary></indexterm>
<para><computeroutput>void Engine::Init (<link linkend="_structwindow__properties">window_properties</link> * wp)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Method for initializing the glfw library, window and logger. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>wp</entry><entry>
<para><link linkend="_class_window">Window</link> properties </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_engine_8cpp_source_1l00006">6</link> of file <link linkend="_engine_8cpp_source">engine.cpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/engine/<link linkend="_engine_8h">engine.h</link>src/engine/<link linkend="_engine_8cpp">engine.cpp</link></section>
</section>
